<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>msg = ''
line2 = ''
g = opt_main_OBJ.id
z = global_debugger_OBJ.id
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (g.selection == 1) then {
 msg = "Use the left or right key to change the game's pace."
 line2 = "(min = 15, normal = 30, max = 60)"
}  
if (g.selection == 2) then {
 msg = 'Use the left or right key to change the sound volume. '
  line2 = "(0 = silent, 100 = max)"
}  
if (g.selection == 3) then {
 msg = 'Press the fire key to save any changes you made.'
  line2 = 'The bloop-ish whatever sound effect, means saving was succesful.'
}  
if (g.selection == 4) then {
 msg = 'Press the fire key to return to the main menu.'
  line2 = "If not saved, changes will be valid until the game is closed."
}  
if (g.selection == 5) then {
 msg = 'To initiate the key binding process press the FIRE key. Then press'
  line2 = "any key you want and it will be assigned to this action."
}  
if (g.selection == 6) then {
 msg = 'To initiate the key binding process press the FIRE key. Then press'
  line2 = "any key you want and it will be assigned to this action."
}  
if (g.selection == 7) then {
 msg = 'To initiate the key binding process press the FIRE key. Then press'
  line2 = "any key you want and it will be assigned to this action."
}  
if (g.selection == 8) then {
 msg = 'To initiate the key binding process press the FIRE key. Then press'
  line2 = "any key you want and it will be assigned to this action."
}  
if (g.selection == 9) then {
 msg = 'To initiate the key binding process press the FIRE key. Then press'
  line2 = "any key you want and it will be assigned to this action."
}  
if (g.selection == 10) then {
 msg = 'Cpt Obvious here. I bet u got how this works already,so...Did you know?'
  line2 = "These numbers show the key code corresponding to a keyboard button."
} 
if (g.selection == 11) then {
 msg = 'Press the fire key to restore the default values of all this stuff.'
  line2 = ''
}  
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
//draw variable value
draw_text_color(356,65,string(z.cf_game_speed),c_white,c_white,c_white,c_white,255)
draw_text_color(356,97,string(z.cf_snd_volume),c_white,c_white,c_white,c_white,255)

draw_text_color(324,225,string(z.cf_up_key),c_white,c_white,c_white,c_white,255)
draw_text_color(324,257,string(z.cf_down_key),c_white,c_white,c_white,c_white,255)
draw_text_color(324,289,string(z.cf_left_key),c_white,c_white,c_white,c_white,255)
draw_text_color(324,321,string(z.cf_right_key),c_white,c_white,c_white,c_white,255)
draw_text_color(324,353,string(z.cf_fire_key),c_white,c_white,c_white,c_white,255)
draw_text_color(324,385,string(z.cf_altfire_key),c_white,c_white,c_white,c_white,255)

//message text draw
draw_text_color(2,room_height-31,msg,c_white,c_white,c_white,c_white,255)
draw_text_color(2,room_height-15,line2,c_white,c_white,c_white,c_white,255)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
