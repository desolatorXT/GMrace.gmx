<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-5</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// this should change according to the weapon...
secondary_ico[0] = hud_hmissile_ico_SPR
secondary_ico[1] = hud_hmissile_ico_SPR

// setup layout for P1
hud_lives_ico_x[0] = 2
hud_lives_txt_x[0] = 19
hud_hp_ico_x[0] = 40
hud_hp_bar_x[0] = 56
hud_energy_ico_x[0] = 112
hud_energy_bar_x[0] = 128
hud_secondary_ico_x[0] = 184
hud_secondary_txt_x[0] = 203

// TEMP: setup layout for P2
hud_lives_ico_x[1] = 2+294
hud_lives_txt_x[1] = 19+294
hud_hp_ico_x[1] = 40+294
hud_hp_bar_x[1] = 56+294
hud_energy_ico_x[1] = 112+294
hud_energy_bar_x[1] = 128+294
hud_secondary_ico_x[1] = 184+294
hud_secondary_txt_x[1] = 203+294

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//HUD background
draw_sprite_ext(hud_bgn_SPR,0,0,room_height-16,1,1,0,make_color_rgb(0,80,0),196)
//-------------------------------

// draw hud for each player
for (i = 0; i &lt; array_length_1d(global_debugger_OBJ.player); i++) {
    hud_draw_SCR(i)
}

//DRAW SCORE
draw_text_color(2,2,'Score: '+string(global_debugger_OBJ.g_score),c_white,c_white,c_white,c_white,0.5)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
